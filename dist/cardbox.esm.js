import t from"fs-extra";import a from"glob";const s={path:"./data/",spaces:2,random:()=>((t=16)=>{(t<=0||"number"!=typeof t)&&(t=default_length);let a="";for(;t--;)a+=Math.floor(16*Math.random()+1).toString(16).toUpperCase();return a})(6)};export default class{constructor(t=s){this._options=Object.assign({},s,t),this._options.path+=this._options.path.endsWith("/")?"":"/",this._cards={}}_card_path(t){return`${this._options.path}${t}.json`}async init(){await t.ensureDir(this._options.path)}async load(){return await this.init(),new Promise(s=>{a(`${this._options.path}**/*.json`,{},async(a,i)=>{await Promise.all(i.map(async a=>{const s=await t.readJson(a);this._cards[s.id]=s})),s(!0)})})}async create(a={}){return a.id||(a.id=this._options.random()),await t.writeJson(this._card_path(a.id),a,{spaces:this._options.spaces}),this._cards[a.id]=a,a}read(t){return t?this._cards[t]:Object.values(this._cards)}async update(t){return await this.create(t)}async delete(a){return!(!a||!this._cards[a]||(await t.remove(this._card_path(a)),delete this._cards[a],0))}}
