import t from"fs-extra";import s from"glob";const a={path:"./data/",spaces:2,random:()=>((t=16)=>{(t<=0||"number"!=typeof t)&&(t=default_length);let s="";for(;t--;)s+=Math.floor(16*Math.random()+1).toString(16).toUpperCase();return s})(6)};export default class{constructor(t=a){this._options=Object.assign({},a,t),this._options.path+=this._options.path.endsWith("/")?"":"/",this._cards={}}_card_path(t){return`${this._options.path}${t}.json`}async init(){await t.ensureDir(this._options.path)}async load(){return await this.init(),new Promise(a=>{s(`${this._options.path}**/*.json`,{},(s,r)=>{r.forEach(s=>{const a=t.readJsonSync(s);this._cards[a.id]=a}),a(!0)})})}async create(s={}){return s.id||(s.id=this._options.random()),await t.writeJson(this._card_path(s.id),s,{spaces:this._options.spaces}),this._cards[s.id]=s,s}read(t){return t?this._cards[t]:Object.values(this._cards)}async update(t){return await this.create(t)}async delete(s){return s&&this._cards[s]||resolve(!1),await t.remove(this._card_path(s)),delete this._cards[s],!0}}
