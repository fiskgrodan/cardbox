"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var fs=_interopDefault(require("fs-extra")),glob=_interopDefault(require("glob"));const create_random_id=(t=16)=>{(t<=0||"number"!=typeof t)&&(t=default_length);let a="";for(;t--;)a+=Math.floor(16*Math.random()+1).toString(16).toUpperCase();return a},default_options={path:"./data/",spaces:2,random:()=>create_random_id(6)};class CardBox{constructor(t=default_options){this._options=Object.assign({},default_options,t),this._options.path+=this._options.path.endsWith("/")?"":"/",this._cards={}}_card_path(t){return`${this._options.path}${t}.json`}async init(){await fs.ensureDir(this._options.path)}async load(){return await this.init(),new Promise(t=>{glob(`${this._options.path}**/*.json`,{},async(a,s)=>{await Promise.all(s.map(async t=>{const a=await fs.readJson(t);this._cards[a.id]=a})),t(!0)})})}async create(t={}){return t.id||(t.id=this._options.random()),await fs.writeJson(this._card_path(t.id),t,{spaces:this._options.spaces}),this._cards[t.id]=t,t}read(t){return t?this._cards[t]:Object.values(this._cards)}async update(t){return await this.create(t)}async delete(t){return!(!t||!this._cards[t])&&(await fs.remove(this._card_path(t)),delete this._cards[t],!0)}}module.exports=CardBox;
